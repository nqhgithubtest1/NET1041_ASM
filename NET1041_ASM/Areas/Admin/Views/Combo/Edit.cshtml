@using NET1041_ASM.Models
@model Combo

<div class="container-xxl flex-grow-1 container-p-y">
    <h4 class="fw-bold py-3 mb-4">
        <span class="text-muted fw-light">Admin/</span> Combo Management
    </h4>

    <div class="card">
        <h5 class="card-header">Edit Combo</h5>
        <div class="card-body">
            @if (TempData["SuccessMessage"] != null)
            {
                <div class="alert alert-success">
                    @TempData["SuccessMessage"]
                </div>
            }

            @if (TempData["ErrorMessage"] != null)
            {
                <div class="alert alert-danger">
                    @TempData["ErrorMessage"]
                </div>
            }

            <form asp-area="Admin" asp-action="Edit" asp-controller="Combo" method="post" enctype="multipart/form-data">
                <input type="hidden" asp-for="ComboID" />

                <div class="mb-3">
                    <label asp-for="Name" class="form-label"></label>
                    <input asp-for="Name" class="form-control" placeholder="Enter combo name" />
                    <span asp-validation-for="Name" class="text-danger"></span>
                </div>
                <div class="mb-3">
                    <label asp-for="Description" class="form-label"></label>
                    <textarea asp-for="Description" class="form-control" rows="4" placeholder="Enter description"></textarea>
                    <span asp-validation-for="Description" class="text-danger"></span>
                </div>
                <div class="mb-3">
                    <label asp-for="Price" class="form-label"></label>
                    <input asp-for="Price" type="number" step="0.01" class="form-control" placeholder="Enter price" />
                    <span asp-validation-for="Price" class="text-danger"></span>
                </div>

                <div class="mb-3">
                    <label for="CurrentImage" class="form-label">Current Image</label>
                    @if (!string.IsNullOrEmpty(Model.ImagePath))
                    {
                        <img src="/@Model.ImagePath" alt="Food Image" class="img-fluid" style="max-height: 150px; margin-bottom: 10px;" />
                        <p>Current File: <strong>@System.IO.Path.GetFileName(Model.ImagePath)</strong></p>
                    }
                    else
                    {
                        <p>No image uploaded yet.</p>
                    }
                </div>

                <div class="mb-3">
                    <label for="ImageFile" class="form-label">Upload New Image</label>
                    <input type="file" class="form-control" id="ImageFile" name="imageFile" accept="image/*" />
                    <small class="form-text text-muted">Leave empty if you don't want to change the image.</small>
                </div>

                <!-- Food Items in Combo -->
                <div class="mb-3" style="max-height: 500px; overflow-y: auto;">
                    <label class="form-label">Select Foods for Combo</label>
                    <div class="mb-3">
                        <label class="form-label">Total Price of Selected Foods</label>
                        <input type="text" id="TotalPrice" class="form-control" value="0 VND" readonly />
                    </div>
                    <table class="table table-bordered">
                        <thead>
                            <tr>
                                <th>ID</th>
                                <th>Image</th>
                                <th>Name</th>
                                <th>Category</th>
                                <th>Price</th>
                                <th>Quantity</th>
                                <th>Select</th>
                            </tr>
                        </thead>
                        <tbody>
                            @for (int i = 0; i < ((List<FoodItem>)ViewBag.FoodItems).Count; i++)
                            {
                                var food = ((List<FoodItem>)ViewBag.FoodItems)[i];
                                var isSelected = Model.ComboFoodItems.Any(cf => cf.FoodItemID == food.FoodItemID);
                                var quantity = isSelected ? Model.ComboFoodItems.First(cf => cf.FoodItemID == food.FoodItemID).Quantity : 0;

                                <tr>
                                    <td>@food.FoodItemID</td>
                                    <td>
                                        <img src="/@food.ImagePath" alt="Food Image" class="rounded" style="width: 50px; height: 50px;" />
                                    </td>
                                    <td>@food.Name</td>
                                    <td>@food.Category.Name</td>
                                    <td>@food.Price.ToString("N0") VND</td>
                                    <td>
                                        <input type="number" name="ComboFoodItems[@i].Quantity" class="form-control quantity-input" min="1" placeholder="Qty" value="@quantity" @(isSelected ? "" : "disabled") />
                                    </td>
                                    <td>
                                        <input type="hidden" name="ComboFoodItems[@i].FoodItemID" value="@food.FoodItemID" />
                                        <input type="checkbox" class="food-checkbox" data-price="@food.Price" onchange="toggleQuantity(this)" @(isSelected ? "checked" : "") />
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>

                <div class="mb-3">
                    <label asp-for="IsAvailable" class="form-label">Status</label>
                    <div class="form-check">
                        <input asp-for="IsAvailable" class="form-check-input" type="radio" value="true" checked />
                        <label class="form-check-label">Active</label>
                    </div>
                    <div class="form-check">
                        <input asp-for="IsAvailable" class="form-check-input" type="radio" value="false" />
                        <label class="form-check-label">Inactive</label>
                    </div>
                </div>
                <div class="text-end">
                    <button type="submit" class="btn btn-primary">Save Changes</button>
                    <a asp-action="Index" class="btn btn-secondary">Cancel</a>
                </div>
            </form>
        </div>
    </div>
</div>

<script>
    function toggleQuantity(checkbox) {
        const quantityInput = checkbox.closest('tr').querySelector('.quantity-input');
        quantityInput.disabled = !checkbox.checked; // Enable/disable input based on checkbox status
        if (!checkbox.checked) {
            quantityInput.value = ''; // Clear value if unchecked
        }
    }
</script>
<script>
    document.addEventListener('DOMContentLoaded', function () {
        // Update total price whenever a checkbox or quantity is changed
        const checkboxes = document.querySelectorAll('.food-checkbox');
        const quantityInputs = document.querySelectorAll('.quantity-input');
        const totalPriceInput = document.getElementById('TotalPrice');

        function updateTotalPrice() {
            let total = 0;

            checkboxes.forEach((checkbox, index) => {
                if (checkbox.checked) {
                    const quantity = parseInt(quantityInputs[index].value) || 0;
                    const price = parseInt(checkbox.dataset.price) || 0;
                    total += quantity * price;
                }
            });

            // Update the total price field
            totalPriceInput.value = total.toLocaleString('vi-VN') + " VND";
        }

        // Attach event listeners
        checkboxes.forEach((checkbox, index) => {
            checkbox.addEventListener('change', function () {
                const quantityInput = quantityInputs[index];
                quantityInput.disabled = !this.checked; // Enable/disable quantity input
                if (!this.checked) {
                    quantityInput.value = ''; // Clear quantity if unchecked
                }
                updateTotalPrice();
            });
        });

        quantityInputs.forEach(input => {
            input.addEventListener('input', updateTotalPrice);
        });

        // Initialize total price on page load
        updateTotalPrice();
    });
</script>